<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">

    <changeSet id="create-table-permission" author="juliuspetero@outlook.com">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="permission"/>
            </not>
        </preConditions>
        <comment>Create table for recording all the endpoint permissions</comment>
        <createTable tableName="permission">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="name" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="action_type" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="entity_type" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="add-initial-permissions" author="juliuspetero@outlook.com">
        <comment>Create commonly used permissions for all users</comment>
        <sql>
            <![CDATA[
            -- User permissions
            INSERT
            IGNORE INTO permission(name, action_type, entity_type)
                VALUES ('READ_APPLICATION_USERS', 'READ', 'USER'),
                ('UPDATE_APPLICATION_USERS', 'UPDATE', 'USER'),
                ('CREATE_APPLICATION_USERS', 'CREATE', 'USER'),
                ('REMOVE_APPLICATION_USERS', 'REMOVE', 'USER');

            -- Role permissions
                INSERT
            IGNORE INTO permission(name, action_type, entity_type, category)
                VALUES ('READ_USER_ROLES', 'READ', 'ROLE'),
                ('CREATE_USER_ROLES', 'CREATE', 'ROLE'),
                ('UPDATE_USER_ROLES', 'UPDATE', 'ROLE'),
                ('READ_USER_PERMISSIONS', 'READ', 'PERMISSION');

            -- Boda boda permissions
                INSERT
            IGNORE INTO permission(name, action_type, entity_type, category)
                VALUES ('READ_BODA_BODAS', 'READ', 'BODA_BODA'),
                ('CREATE_', 'CREATE', 'BODA_BODA'),
                ('UPDATE_BODA_BODAS', 'UPDATE', 'BODA_BODA'),
                ('CLOSE_BODA_BODAS', 'CLOSE', 'BODA_BODA');
            ]]>
        </sql>
    </changeSet>

    <changeSet id="create-table-role" author="juliuspetero@outlook.com">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="role"/>
            </not>
        </preConditions>
        <comment>Create table for recording roles of app users</comment>
        <createTable tableName="role">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="name" type="varchar(255)">
                <constraints nullable="false" unique="true" uniqueConstraintName="unique_role_name"/>
            </column>
            <column name="description" type="longtext">
                <constraints nullable="false"/>
            </column>
            <column name="record_status" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="create-table-role_permission" author="juliuspetero@outlook.com">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="role_permission"/>
            </not>
        </preConditions>
        <comment>Create join table for role and permission</comment>
        <createTable tableName="role_permission">
            <column name="role_id" type="bigint">
                <constraints nullable="false" foreignKeyName="09062021_FK_role_permission_role_id"
                             references="role(id)"/>
            </column>
            <column name="permission_id" type="bigint">
                <constraints nullable="false"
                             foreignKeyName="09062021_FK_role_permission_permission_id"
                             references="permission(id)"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="create-table-user" author="juliuspetero@outlook.com">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="user"/>
            </not>
        </preConditions>
        <comment>Create table for recording all the users of the system</comment>
        <createTable tableName="user">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="first_name" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="last_name" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="date_of_birth" type="date">
                <constraints nullable="false"/>
            </column>
            <column name="id_type_enum" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="id_number" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="address" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="email" type="varchar(255)">
                <constraints nullable="false" unique="true" uniqueConstraintName="unique_user_email"/>
            </column>
            <column name="phone_number" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="password" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="role_id" type="bigint">
                <constraints nullable="true"
                             foreignKeyName="09062021_FK_user_role_id"
                             references="role(id)"/>
            </column>
            <column name="created_on" type="timestamp" defaultValueComputed="now()">
                <constraints nullable="true"/>
            </column>
            <column name="modified_on" type="timestamp" defaultValueComputed="now()">
                <constraints nullable="true"/>
            </column>
            <column name="created_by" type="bigint">
                <constraints nullable="false"
                             foreignKeyName="01062021_FK_created_by_user_id"
                             references="user(id)"/>
            </column>
            <column name="modified_by" type="bigint">
                <constraints nullable="false"
                             foreignKeyName="01062021_FK_modified_by_user_id"
                             references="user(id)"/>
            </column>
            <column name="record_status" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="insert_administration_user" author="juliuspetero@outlook.com">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM user;
            </sqlCheck>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM role;
            </sqlCheck>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM role_permission;
            </sqlCheck>
        </preConditions>

        <comment>Initial role creation</comment>
        <sql>
            <![CDATA[
            INSERT
            IGNORE INTO role(name, description, record_status)
            VALUES ('Administrator', 'This role provides all administration permissions', 'ACTIVE'),
                   ('Field Agent', 'This role provides all field agent permissions', 'ACTIVE'),
                   ('Pump Attendant', 'This role provides all pump attendant permissions', 'ACTIVE');

            INSERT
            IGNORE INTO role_permission (role_id, permission_id)
            SELECT (SELECT role.id FROM role WHERE role.name = 'Administrator' LIMIT 1), pm.id
            FROM permission pm
            WHERE pm.name IN ('READ_USER_PERMISSION'
                , 'READ_USER_ROLES'
                , 'CREATE_USER_ROLES'
                , 'UPDATE_USER_ROLES'
                , 'DELETE_USER_ROLES'
                , 'READ_APPLICATION_USERS'
                , 'CREATE_APPLICATION_USERS'
                , 'UPDATE_APPLICATION_USERS'
                , 'CLOSE_APPLICATION_USERS');

            INSERT
            IGNORE INTO role_permission (role_id, permission_id)
            SELECT (SELECT role.id FROM role WHERE role.name = 'Field Agent' LIMIT 1), pm.id
            FROM permission pm
            WHERE pm.name IN ('READ_BODA_BODAS', 'CREATE_BODA_BODAS', 'UPDATE_BODA_BODAS', 'CLOSE_BODA_BODAS');

            INSERT
            IGNORE INTO role_permission (role_id, permission_id)
            SELECT (SELECT role.id FROM role WHERE role.name = 'Pump Attendant' LIMIT 1), pm.id
            FROM permission pm
            WHERE pm.name IN ('READ_BODA_BODAS', 'READ_LOANS', 'DISBURSE_LOANS', 'REPAY_LOANS');

            INSERT
            IGNORE INTO app_user(first_name, last_name, date_of_birth, id_number, id_type_enum, address, email, phone_number, password,
                          role_id, record_status)
            VALUES ('Super', 'Admin', CURDATE(), 'U000040', 'NATIONAL_ID', 'Uganda/Kampala', 'admin@easypump.com', '+256780000000',
                    '$2a$10$IfZ8QYCUfBRqseoKLEAelOPoa0QTpVl431amtf6R59ZgXpTD.6G3a',
                    (SELECT role.id FROM role WHERE role.name = 'Administrator' LIMIT 1), 'ACTIVE');
            ]]>
        </sql>
    </changeSet>

    <changeSet id="create-table-user_activity_log" author="juliuspetero@outlook.com">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="user_activity_log"/>
            </not>
        </preConditions>

        <comment>Create table for logging all user POST, UPDATE and DELETE actions</comment>

        <createTable tableName="user_activity_log">
            <column name="id" type="bigint" autoIncrement="true">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="request_url" type="varchar(3000)">
                <constraints nullable="false"/>
            </column>
            <column name="request_method" type="varchar(255)">
                <constraints nullable="true"/>
            </column>
            <column name="request_headers" type="longtext">
                <constraints nullable="true"/>
            </column>
            <column name="request_body" type="longtext">
                <constraints nullable="true"/>
            </column>
            <column name="response_body" type="longtext">
                <constraints nullable="true"/>
            </column>
            <column name="response_headers" type="longtext">
                <constraints nullable="true"/>
            </column>
            <column name="response_status" type="longtext">
                <constraints nullable="true"/>
            </column>
            <column name="response_status_code" type="longtext">
                <constraints nullable="true"/>
            </column>
            <column name="stack_trace" type="longtext">
                <constraints nullable="true"/>
            </column>
            <column name="entity_type" type="varchar(255)">
                <constraints nullable="true"/>
            </column>
            <column name="entity_id" type="bigint">
                <constraints nullable="true"/>
            </column>
            <column name="action_type" type="varchar(255)">
                <constraints nullable="true"/>
            </column>
            <column name="created_on" type="timestamp" defaultValueComputed="now()">
                <constraints nullable="false"/>
            </column>
            <column name="duration" type="int">
                <constraints nullable="true"/>
            </column>
            <column name="user_id" type="bigint">
                <constraints nullable="true"/>
            </column>
            <column name="remote_ip_address" type="varchar(1000)">
                <constraints nullable="true"/>
            </column>
            <column name="platform_type" type="varchar(1000)">
                <constraints nullable="true"/>
            </column>
        </createTable>
    </changeSet>
</databaseChangeLog>